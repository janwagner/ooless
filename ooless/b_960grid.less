// breakpoints
@bp-mobile                  :650px;
@bp-tablet                  :850px;
@bp-desktop-s               :990px;
@bp-desktop-m               :1270px;
@bp-desktop-l               :1670px;
@bp-max                     :10000px;

// media queries
.mq(@min-width,@max-width,@properties)          { @media (min-width: @min-width) and (max-width: @max-width) { @properties(); } }
.mq-min-height(@min-height,@properties)         { @media (min-height: @min-height) { @properties(); } }
.mq-max-height(@max-height,@properties)         { @media (max-height: @max-height) { @properties(); } }

// grid system
@gridWidth: @bp-desktop-m;
@columnCount: 12;
@columnSpace: 20px;
@columnWidth: (100 - @columnSpace);

.column(@count) {
    @thisColumnWidth: (100% / @columnCount * @count);
    @thisColumnSpace: (@columnSpace / 2);
    .box-sizing(border-box);
    float: left;
    margin-left: @thisColumnSpace;
    margin-right: @thisColumnSpace;
    min-height: 1px; // for empty cols
    width: calc(~"@{thisColumnWidth} - @{thisColumnSpace} * 2");
    .mq(0,@bp-mobile, {
        &:not([class*="mobile-col"]) {
            margin-left: 0 !important;
            margin-right: 0 !important;
            width: 100% !important;
        }
    });
}

.row {
    .cf;
    margin-left: auto;
    margin-right: auto;
    max-width: @gridWidth;
    position: relative;
    &.fullWidth {
        max-width: 100%;
    }
    .row {
        .cf;
        margin-left: (-(@columnSpace / 2));
        margin-right: (-(@columnSpace / 2));
        max-width: none;
        .mq(0,@bp-mobile, {
            margin-left: 0;
            margin-right: 0;
        });
    }
}

// create desktop classes
.cols(@columnCount);
.cols(@n, @i: 1) when (@i =< @n) { .col-@{i} { .column(@i) } .cols(@n, (@i + 1)) }
// create desktop-max classes
.mq(0,@bp-max, {
    .desktop-max-cols(@columnCount);
    .desktop-max-cols(@n, @i: 1) when (@i =< @n) { .desktop-max-col-@{i} { .column(@i) } .desktop-max-cols(@n, (@i + 1)) }
});
// create desktop-l classes
.mq(0,@bp-desktop-l, {
    .desktop-l-cols(@columnCount);
    .desktop-l-cols(@n, @i: 1) when (@i =< @n) { .desktop-l-col-@{i} { .column(@i) } .desktop-l-cols(@n, (@i + 1)) }
});
// create desktop-m classes
.mq(0,@bp-desktop-m, {
    .desktop-m-cols(@columnCount);
    .desktop-m-cols(@n, @i: 1) when (@i =< @n) { .desktop-m-col-@{i} { .column(@i) } .desktop-m-cols(@n, (@i + 1)) }
});
// create desktop-s classes
.mq(0,@bp-desktop-s, {
    .desktop-s-cols(@columnCount);
    .desktop-s-cols(@n, @i: 1) when (@i =< @n) { .desktop-s-col-@{i} { .column(@i) } .desktop-s-cols(@n, (@i + 1)) }
});
// create tablet classes
.mq(0,@bp-tablet, {
    .tablet-cols(@columnCount);
    .tablet-cols(@n, @i: 1) when (@i =< @n) { .tablet-col-@{i} { .column(@i) } .tablet-cols(@n, (@i + 1)) }
});
// create mobile classes
.mq(0,@bp-mobile, {
    .mobile-cols(@columnCount);
    .mobile-cols(@n, @i: 1) when (@i =< @n) { .mobile-col-@{i} { .column(@i) } .mobile-cols(@n, (@i + 1)) }
});